services:
    springcloud-postgres.db.companies:
      image: postgres:16.1
      container_name: springcloud-postgres.db.companies
      restart: always
      volumes:
        - ./sql/create_schema.sql:/docker-entrypoint-initdb.d/create_schema.sql
        - ./sql/data.sql:/docker-entrypoint-initdb.d/data.sql
      environment:
        POSTGRES_DB: 'companies'
        POSTGRES_USER: 'debuggeandoideas'
        POSTGRES_PASSWORD: 'udemy'
      ports:
        - '5432:5432'
    springcloud-zookeeper:
      image: confluentinc/cp-zookeeper:7.4.3
      container_name: springcloud-zookeeper
      restart: always
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
      ports:
        - "2181:2181"
    springcloud-kafka.broker:
      image: confluentinc/cp-kafka:7.4.3
      container_name: springcloud-kafka.broker
      restart: always
      depends_on:
        - springcloud-zookeeper
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: 'springcloud-zookeeper:2181'
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      ports:
        - "9092:9092"
    springcloud-mongo.db:
      image: mongo:7.0.5-rc0
      restart: always
      container_name: springcloud-mongo.db
      hostname: mongodb
      environment:
        MONGO_INITDB_ROOT_USERNAME: sa
        MONGO_INITDB_ROOT_PASSWORD: sa
        MONGO_INITDB_DATABASE: reports
      ports:
        - "27017:27017"