services:
  springcloud-postgres.db.companies:
    image: postgres:16.1
    container_name: springcloud-postgres.db.companies
    restart: always
    volumes:
      - ./sql/create_schema.sql:/docker-entrypoint-initdb.d/create_schema.sql
      - ./sql/data.sql:/docker-entrypoint-initdb.d/data.sql
    environment:
      POSTGRES_DB: 'companies'
      POSTGRES_USER: 'debuggeandoideas'
      POSTGRES_PASSWORD: 'udemy'
    ports:
      - '5432:5432'
    healthcheck: # Comprueba estado de salud del servicio
      test: ["CMD-SHELL", "pg_isready -U debuggeandoideas -d companies"]
      interval: 5s
      timeout: 5s
      retries: 10

  springcloud-zookeeper:
    image: confluentinc/cp-zookeeper:7.4.3
    container_name: springcloud-zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://localhost:8080/commands/ruok | grep -q '\"error\" : null' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  springcloud-kafka.broker:
    image: confluentinc/cp-kafka:7.4.3
    container_name: springcloud-kafka.broker
    restart: always
    depends_on:
      springcloud-zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'springcloud-zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://springcloud-kafka.broker:9092,PLAINTEXT_INTERNAL://springcloud-kafka.broker:29092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --list --bootstrap-server localhost:9092"]
      interval: 15s
      timeout: 10s
      retries: 6
      start_period: 30s  # Kafka tarda en iniciarse

  springcloud-mongo.db:
    image: mongo:7.0.5-rc0
    container_name: springcloud-mongo.db
    restart: always
    hostname: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: sa
      MONGO_INITDB_ROOT_PASSWORD: sa
      MONGO_INITDB_DATABASE: reports
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 15s
      timeout: 8s
      retries: 3

  springcloud-registry.server:
    build: 
      context: ./spring-cloud-root/registry.server
      dockerfile: Dockerfile
    image: springcloud/registry.server:latest
    container_name: springcloud-registry.server
    restart: always
    ports:
      - "8761:8761"
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://localhost:8761/actuator/health || exit 1"]
      interval: 15s      # ✔️ Buen balance entre carga y detección rápida
      timeout: 30s       # ✔️ Eureka puede tardar en iniciarse (especialmente en frío)
      retries: 10        # ✔️ Suficiente para problemas temporales
      start_period: 45s  # ✔️ Tiempo de gracia para Spring Boot

  springcloud-config.server:
    build: 
      context: ./spring-cloud-root/config.server
      dockerfile: Dockerfile
    image: springcloud/config.server:latest
    container_name: springcloud-config.server
    restart: always
    ports:
      - "7777:7777"
    depends_on:
      springcloud-registry.server:
        condition: service_healthy
    environment:
      - EUREKA_SERVER_URL=http://springcloud-registry.server:8761/eureka/
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://localhost:7777/actuator/health || exit 1"]
      interval: 20s      # ▲ Aumentado (depende de Eureka)
      timeout: 45s       # ✔️ Config Server necesita más tiempo para cargar configs
      retries: 12        # ▲ Más reintentos por sus dependencias
      start_period: 90s  # ✔️ Espera generosa (carga configuraciones)

  springcloud-companies:
    build: 
      context: ./spring-cloud-root/companies
      dockerfile: Dockerfile
    image: springcloud/companies:latest
    container_name: springcloud-companies
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      springcloud-config.server:
        condition: service_healthy  # Espera a que Config Server esté saludable
      springcloud-postgres.db.companies:
        condition: service_healthy  # Espera a que PostgreSQL acepte conexiones
    environment:
      - EUREKA_SERVER_URL=http://springcloud-registry.server:8761/eureka/
      - CONFIG_SERVER_URL=http://springcloud-config.server:7777
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://localhost:8080/actuator/health || exit 1"]
      interval: 25s      # ▲ Checks menos frecuentes (servicio final)
      timeout: 60s       # ▲ Máximo tiempo (depende de DB + Config Server + Eureka)
      retries: 15        # ▲ Máximos reintentos (último eslabón)
      start_period: 100s # ✔️ Espera muy generosa (inicializa todas las dependencias)

  springcloud-companies.fallback:
    build: 
      context: ./spring-cloud-root/companies.fallback
      dockerfile: Dockerfile
    image: springcloud/companies.fallback:latest
    container_name: springcloud-companies.fallback
    restart: always
    ports:
      - "8787:8787"
    depends_on:
      springcloud-registry.server:
        condition: service_healthy
    environment:
      - EUREKA_SERVER_URL=http://springcloud-registry.server:8761/eureka/
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://localhost:8787/actuator/health || exit 1"]
      interval: 10s
      timeout: 30s
      retries: 10
      start_period: 90s

  springcloud-report.ms:
    build: 
      context: ./spring-cloud-root/report.ms
      dockerfile: Dockerfile
    image: springcloud/report.ms:latest
    container_name: springcloud-report.ms
    restart: always
    ports:
      - "7070:7070"
    depends_on:
      springcloud-config.server:
        condition: service_healthy  # Espera a que Config Server esté saludable
      springcloud-registry.server:
        condition: service_healthy
      springcloud-kafka.broker:
        condition: service_healthy
    environment:
      - EUREKA_SERVER_URL=http://springcloud-registry.server:8761/eureka/
      - CONFIG_SERVER_URL=http://springcloud-config.server:7777
      - BROKER_URL=springcloud-kafka.broker:9092
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://localhost:7070/report.ms/actuator/health || exit 1"]
      interval: 10s
      timeout: 30s
      retries: 10
      start_period: 90s

  springcloud-report.listener:
    build: 
      context: ./spring-cloud-root/report.listener
      dockerfile: Dockerfile
    image: springcloud/report.listener:latest
    container_name: springcloud-report.listener
    restart: always
    ports:
      - "7071:7071"
    depends_on:
      springcloud-mongo.db:
        condition: service_healthy
      springcloud-report.ms:
        condition: service_healthy
    environment:
      - MONGO_HOST=springcloud-mongo.db
      - BROKER_URL=springcloud-kafka.broker:9092
      - EUREKA_SERVER_URL=http://springcloud-registry.server:8761/eureka/
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://localhost:7071/actuator/health || exit 1"]
      interval: 10s
      timeout: 30s
      retries: 10
      start_period: 90s

  springcloud-auth.server:
    build: 
      context: ./spring-cloud-root/auth.server
      dockerfile: Dockerfile
    image: springcloud/auth.server:latest
    container_name: springcloud-auth.server
    restart: always
    ports:
      - "3030:3030"
    depends_on:
      springcloud-config.server:
        condition: service_healthy
    environment:
      - EUREKA_SERVER_URL=http://springcloud-registry.server:8761/eureka/
      - CONFIG_SERVER_URL=http://springcloud-config.server:7777
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://localhost:3030/actuator/health || exit 1"]
      interval: 10s
      timeout: 30s
      retries: 10
      start_period: 90s

  springcloud-gateway:
    build: 
      context: ./spring-cloud-root/gateway
      dockerfile: Dockerfile
    image: springcloud/gateway:latest
    container_name: springcloud-gateway
    restart: always
    ports:
      - "4040:4040"
    depends_on:
      springcloud-registry.server:
        condition: service_healthy
    environment:
      - EUREKA_SERVER_URL=http://springcloud-registry.server:8761/eureka/
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://localhost:4040/actuator/health || exit 1"]
      interval: 10s
      timeout: 30s
      retries: 10
      start_period: 90s