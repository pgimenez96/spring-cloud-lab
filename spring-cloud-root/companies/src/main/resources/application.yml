version: v1
spring:
  application:
    name: companies
  main:
    web-application-type: SERVLET
  profiles:
    active: '@activatedProperties@'
  config:
    import: "optional:configserver:http://localhost:7777"
  datasource:
    companies-db-postgres:
      driver-class-name: org.postgresql.Driver
      connection-test-query: SELECT 1
      connection-init-sql: SELECT 1
      pool-name: companiesDbPostgresPool
      hikari:
        connection-timeout: 20000
        maximum-pool-size: 5
server:
  servlet:
    context-path: /@project.artifactId@
springdoc:
  show-actuator: true
  swagger-ui:
    disable-swagger-default-url: true
    url: /v3/api-docs
eureka:
  instance:
    instance-id: "${spring.application.name}:${random.value}"
    health-check-url-path: ${server.servlet.context-path}/actuator/health
    status-page-url-path: ${server.servlet.context-path}/actuator/info
    home-page-url-path: ${server.servlet.context-path}/
  client:
    server-url:
      defaultZone: http://localhost:8761/eureka/
management:
  tracing:
    enabled: true
    sampling:
      probability: 1.0
  otlp:
    metrics:
      export:
        url: http://localhost:4318/v1/metrics
        step: 10s
    tracing:
      endpoint: http://localhost:4318/v1/traces
  metrics:
    distribution:
      percentiles:
        do.sleep.method.timed: 0.99, 0.95, 0.9, 0.7, 0.5
        http.server.requests: 0.99, 0.95, 0.9, 0.7, 0.5
      percentiles-histogram:
        do.sleep.method.timed: true
        http.server.requests: true
      minimum-expected-value:
        do.sleep.method.timed: 100ms
        http.server.requests: 100ms
      maximum-expected-value:
        do.sleep.method.timed: 10s
        http.server.requests: 10s
      slo:
        do.sleep.method.timed: 300ms,500ms,1s,2s
        http.server.requests: 300ms,500ms,1s,2s
  endpoints:
    web:
      exposure:
        include: '*'
---
spring:
  config:
    activate:
      on-profile: develop
  datasource:
    companies-db-postgres:
      jdbc-url: ${companies-db-postgres.jdbc-url}
      username: ${companies-db-postgres.username}
      password: ${companies-db-postgres.password}
server:
  port: 0
log:
  level: DEBUG
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
logging:
  level:
    org:
      hibernate:
        SQL: DEBUG
        type:
          descriptor:
            sql:
              BasicBinder: TRACE
---
spring:
  config:
    activate:
      on-profile: release
  datasource:
    companies-db-postgres:
      jdbc-url: ${companies-db-postgres.jdbc-url}
      username: ${companies-db-postgres.username}
      password: ${companies-db-postgres.password}